// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      Int  @id @unique    @default(autoincrement())
  user_address String 
  user_network String
  user_nickname String
  user_introduction String
  user_point Int @default(0)
  articles Article[]
  lectures Lecture[]
  comments Comment[]
  likes Like[]
  userlectures UserLecture[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Article {
  article_id      Int      @id @default(autoincrement())
  article_content String 
  comment_count Int @default(0)
  like_count Int @default(0)
  user    User     @relation(fields: [user_id], references: [user_id])
  user_id Int 
  comments Comment[]
  likes Like[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Lecture {
  lecture_id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [user_id], references: [user_id])
  user_id Int 
  lecture_title String
  lecture_summary String
  lecture_introduction String
  instructor_introduction String
  lecture_url String
  lecture_image String
  lecture_price Int
  userlectures UserLecture[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Comment {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [user_id], references: [user_id])
  user_id Int 
  article    Article     @relation(fields: [article_id], references: [article_id])
  article_id Int
  comment_content String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Like {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [user_id], references: [user_id])
  user_id Int 
  article    Article     @relation(fields: [article_id], references: [article_id])
  article_id Int
  created_at DateTime @default(now())
}

model UserLecture {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [user_id], references: [user_id])
  user_id Int 
  lecture    Lecture     @relation(fields: [lecture_id], references: [lecture_id])
  lecture_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}